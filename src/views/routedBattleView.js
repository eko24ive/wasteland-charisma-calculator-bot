const moment = require('moment-timezone');
const _ = require('underscore');

const routedBattleView = (Beast, {
  battleId,
}) => new Promise((resolve) => {
  Beast.findOne({
    'battles._id': battleId,
  }).then((fBeast) => {
    if (fBeast !== null) {
      const beast = fBeast.toJSON();
      const bId = battleId.toJSON();
      let battleReply;

      const battle = beast.battles.filter(beastBattle => beastBattle._id.toJSON() === bId).pop();

      const minMax = (array) => {
        const min = _.min(array);
        const max = _.max(array);

        if (min !== max) {
          return `${min}-${max}`;
        }

        return `${min}`;
      };

      const damageReceived = (beastBattle) => {
        if (beastBattle.damagesReceived[0] !== 0) {
          return `üíî${beastBattle.totalDamageReceived} –∑–∞ ${beastBattle.damagesReceived.length} —É–¥–∞—Ä(–∞)`;
        }

        return `üíî${beastBattle.totalDamageReceived}`;
      };


      if (battle.outcome === 'win') {
        if (battle.stats !== undefined) {
          battleReply = `‚ñ´Ô∏è –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏ —É—Ä–æ–Ω–µ –º–æ–±—É ${battle.totalDamageGiven}.\n–°—Ç–∞—Ç—ã –∏–≥—Ä–æ–∫–∞: ‚öîÔ∏è–£—Ä–æ–Ω: ${battle.stats.damage} üõ°–ë—Ä–æ–Ω—è: ${battle.stats.armor}.\n–í—Å–µ–≥–æ —É—Ä–æ–Ω–∞ –æ—Ç –º–æ–±–∞ –ø–æ–ª—É—á–µ–Ω–æ -${damageReceived(battle)}`;
        }
      } else if (battle.stats !== undefined) {
        battleReply = `‚ñ´Ô∏è –ù–µ—É–¥–∞—á–∞ –ø—Ä–∏ —É—Ä–æ–Ω–µ –º–æ–±—É ${battle.totalDamageGiven}.\n–°—Ç–∞—Ç—ã –∏–≥—Ä–æ–∫–∞:‚öîÔ∏è–£—Ä–æ–Ω: ${battle.stats.damage} üõ°–ë—Ä–æ–Ω—è: ${battle.stats.armor}.\n–í—Å–µ–≥–æ —É—Ä–æ–Ω–∞ –æ—Ç –º–æ–±–∞ –ø–æ–ª—É—á–µ–Ω–æ -${damageReceived(battle)}`;
      } else {
        battleReply = '–£ —ç—Ç–æ–π –±–∏—Ç–≤—ã –ø–æ—á–µ–º—É-—Ç–æ –Ω–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –±—Ä–æ–Ω–∏ –∏ —É—Ä–æ–Ω–∞ –∏–≥—Ä–æ–∫–∞ - –Ω–∏—á–µ–≥–æ –Ω–µ –º–æ–≥—É –≤—ã–≤–µ—Å—Ç–∏.';
      }

      const hitsByPlayer = battle.damagesGiven.length;
      const hitsByBeast = battle.damagesReceived[0] === 0 ? 0 : battle.damagesReceived.length;

      const meta = `–ó–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞ –ø—Ä–µ–¥ –±–æ–µ–º: ${battle.healthOnStart}`;
      let dateInfo = '–£ —ç—Ç–æ–π –±–∏—Ç–≤—ã –Ω–µ—Ç —à—Ç–∞–º–ø–∞ –≤—Ä–µ–º–µ–Ω–∏.';

      if (battle.stamp) {
        dateInfo = moment(Number(battle.stamp.slice(0, 13))).format('DD/MM/YYYY, hh:mm:ss');
      }


      const headerReply = `<b>${beast.name}</b>
üë£${beast.type === 'DarkZone' ? 'üö∑' : 'üíÄ'} ${minMax(beast.distanceRange)}–∫–º
`;
      resolve({
        reply: `${headerReply}\n${battleReply}\n\n–í—Ä–µ–º—è –±–∏—Ç–≤—ã: ${dateInfo}\n\n${meta}\n\n–ò–≥—Ä–æ–∫ —É–¥–∞—Ä–∏–ª –º–æ–±–∞ ${hitsByPlayer} —Ä–∞–∑\n–ú–æ–±–∞ —É–¥–∞—Ä–∏–ª –∏–≥—Ä–æ–∫–∞ ${hitsByBeast} —Ä–∞–∑`,
        beast,
      });
    } else {
      resolve({
        reply: false,
      });
    }
  }).catch(e => console.log(e));
});

module.exports = routedBattleView;
