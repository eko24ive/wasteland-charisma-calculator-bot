require('dotenv').config({ path: '../../.env' });
const mongoose = require('mongoose');
const async = require('async');
const _ = require('underscore');

const beastSchema = require('../../schemes/beast');

const Beast = mongoose.model('Beast', beastSchema);

mongoose.connect('mongodb://localhost/wwa');

const beastsToDelete = [
  '👁Мутант (Голодный)',
  '👁Мутант (❗️Огромный)',
  '🐲Трог (❗️Огромный)',
  '🐲Трог (💙Леонардо)',
  '🐲Трог (💛Микеланджело)',
  '🐲Трог (💜Донателло)',
  '🐲Трог (❤️Рафаэль)',
  '🦎Геккон (🏵🎖Огненный)',
  '👽Чужой (🏵🎖Капитан)',
  '🐜Человек-муравей (Где он блядь?!)',
  '🐙Туманник (🏵🎖🎖Убийца)',
  '🦇Мышь (Человек)',
  '🤡Жокей (Чего ты такой серьезный?)',
  '🐊Крокс (Крокодил-мутант)',
  '🐱Баба-кот (Не представляй)',
  '🤖Киборг (🏵🏵🎖Мифический)',
  '🦅Касадор (🏵🏵🎖Особь 185)',
  '🐲Трог (🏵🏵🎖Мифический)',
  '🦀Краб (Грязевой)',
  '🌞Атронах (🔥Огненный)',
  '㊙️Дремора (🔥Даэдра)',
  '🐲Алдуин (🔥Пожиратель Мира)',
  '🐕Киберпес (🏆Исключительный)',
  '🚨Анклав (🏆🏆Главнокомандующий)',
  '🐜Человек-муравей (⭐️)',
  '👽Чужой (⭐️🌟⭐️)',
  '🦆Ванаминго (До последней крови, сука!)',
  '🚨Анклав (🚬Солдат)',
  '🤖Киборг (🔱🔱🔱Центурион)',
  '🦆Ванаминго (Поднимает связи криминального прошлого)',
  '🚨Анклав (🚬Элита🚬)',
  '🚨Анклав (🚬🔱🔱Единичный)',
  '🐜Муравей (🚬Гигант)',
  '🐜Человек-муравей (Это птица? Это самолет? Это муравей!)',
  '🦆Ванаминго (Прикидывается королем муравьев)',
  '🚨Муравей-Анклав (🚬Элита🚬)',
  '☯️Мыслитель (Тысячелетний)',
  '🐙Хедкраб (Ламарр)',
  '🐙Хедкраб (Гонарч)',
  '🐜Муравьиный лев (Обычный)',
  '🚨Альянс (🚬Солдат)',
  '👁‍🗨G-man (Ноунейм с кейсом)',
  '🐕Магмадар (Гончая недр)',
  '🔥Геддон (Барон)',
  '🐲Сульфурион (Предвестник)',
  '🐲Мажордом (Экзекутос)',
  '👹Рагнарос (Дитя Вита и повелитель Огня)',
];
console.log('START');

Beast.find().then((beasts) => {
  console.log(`Before: ${beasts.length}`);
});

async.forEach(beastsToDelete, (name, next) => {
  Beast.find({
    name,
    isDungeon: false,
  }).then((beasts) => {
    if (beasts.length === 0) {
      next();
    } else {
      async.forEach(beasts, (beast, _next) => {
        beast.remove().then(() => {
          _next();
        });
      }, () => {
        next();
      });
    }
  });
}, () => {
  Beast.find().then((beasts) => {
    console.log(`After: ${beasts.length}`);
    mongoose.disconnect();
  });
});
